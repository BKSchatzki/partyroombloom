// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id    String  @id @default(auto()) @map("_id") @db.ObjectId
  email String  @unique
  name  String?
  Scene Scene[]
}

model Scene {
  id             String          @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  description    String
  movement       String
  flavor         String
  landmarkThings LandmarkThing[]
  User           User?           @relation(fields: [userId], references: [id])
  userId         String?         @db.ObjectId
}

model LandmarkThing {
  id                  String        @id @default(auto()) @map("_id") @db.ObjectId
  landmarkName        String
  landmarkDescription String
  hiddenThings        HiddenThing[]
  Scene               Scene?        @relation(fields: [sceneId], references: [id])
  sceneId             String?       @db.ObjectId
}

model HiddenThing {
  id                String         @id @default(auto()) @map("_id") @db.ObjectId
  hiddenName        String
  hiddenDescription String
  hasSecret         Boolean
  secretThings      SecretThing[]
  LandmarkThing     LandmarkThing? @relation(fields: [landmarkThingId], references: [id])
  landmarkThingId   String?        @db.ObjectId
}

model SecretThing {
  id                String       @id @default(auto()) @map("_id") @db.ObjectId
  secretName        String
  secretDescription String
  onSuccess         String
  onFailure         String
  HiddenThing       HiddenThing? @relation(fields: [hiddenThingId], references: [id])
  hiddenThingId     String?      @db.ObjectId
}
