// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int            @id @default(autoincrement())
  googleId      String         @unique
  email         String         @unique
  name          String?
  picture       String?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @default(now()) @updatedAt
  sessions      Session[]
  outlines      Outline[]
  elements      Element[]
  conversations Conversation[]

  @@map("PRB_Users")
}

model Session {
  id        String   @id
  expiresAt DateTime
  createdAt DateTime @default(now())
  userId    Int
  user      User     @relation(references: [id], fields: [userId], onDelete: Cascade)

  @@map("PRB_Sessions")
}

model Outline {
  id            Int            @id @default(autoincrement())
  userId        Int
  user          User           @relation(fields: [userId], references: [id], onDelete: Cascade)
  title         String?
  description   String?
  goal          String?
  comments      String?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @default(now()) @updatedAt
  elements      Element[]
  conversations Conversation[]

  @@map("PRB_Outlines")
}

model Element {
  id              String    @id
  outlineId       Int
  outline         Outline   @relation(fields: [outlineId], references: [id], onDelete: Cascade)
  userId          Int
  user            User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  parentId        String?
  parent          Element?  @relation("Element", fields: [parentId], references: [id], onDelete: Cascade)
  type            String
  name            String?
  description     String?
  rollableSuccess String?
  rollableFailure String?
  userCreatedAt   DateTime  @default(now())
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @default(now()) @updatedAt
  children        Element[] @relation("Element")

  @@map("PRB_Elements")
}

model Conversation {
  id        Int      @id @default(autoincrement())
  outlineId Int
  outline   Outline  @relation(fields: [outlineId], references: [id], onDelete: Cascade)
  userId    Int
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  thread    Json
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("PRB_Conversations")
}
